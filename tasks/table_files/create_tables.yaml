---
- name: Copy variable definitions nft file
  ansible.builtin.template:
    src: tables/defines.nft.j2
    dest: "{{ nftables_dir }}/defines.nft"
    validate: /usr/sbin/nft -c -f %s
    mode: u=rw,g=r,o=
  become: true
  tags:
    - nftables_update
  notify:
    - reload nftables ruleset
    - start nftables service
    - enable nftables service

- name: Copy sets definitions nft file
  ansible.builtin.template:
    src: tables/filter_sets.nft.j2
    dest: "{{ nftables_dir }}/filter_sets.nft"
    mode: u=rw,g=r,o=
    # validation will crash because
    # this file is meant to be included in firewall.nft
  become: true
  tags:
    - nftables_update

- name: Check which dynamic table files do not exist yet and create them if necessary
  ansible.builtin.include_tasks:
    file: table_files/create_dynamic_tables.yaml
    apply:
      tags:
        - nftables_update
  loop: "{{ nftables_dynamic_tables.keys() }}"
  loop_control:
    loop_var: table
  tags:
    - nftables_update
  when: nftables_dynamic_tables

- name: Copy all template nft files
  ansible.builtin.template:
    src: tables/table.nft.j2
    dest: "{{ nftables_dir }}/{{ table | strip_family }}.nft"
    mode: u=rw,g=r,o=
    # crashes on validation due to dependencies,
    # gets validated as a whole when global file is pushed
    # validate: /usr/sbin/nft -c -f %s
  become: true
  loop: "{{ nftables_ruleset.keys() }}"
  loop_control:
    loop_var: table
  tags:
    - nftables_update
  notify:
    - reload nftables ruleset
    - start nftables service
    - enable nftables service

- name: Copy global nftable config file
  ansible.builtin.template:
    src: nftables.nft.j2
    dest: "{{ nftables_dir }}/nftables.nft"
    validate: /usr/sbin/nft -c -f %s
    mode: u=rw,g=r,o=
  become: true
  tags:
    - nftables_update
  notify:
    - reload nftables ruleset
    - start nftables service
    - enable nftables service
